# -*- coding: utf-8 -*-
"""fastapi_app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YM-uu1UwMtv5U5_WZJ0ibgEKWRxpw5Dc
"""

from fastapi import FastAPI, UploadFile, File
from fastapi.responses import HTMLResponse, JSONResponse
from fastapi.middleware.cors import CORSMiddleware
import pandas as pd
import io

app = FastAPI()

# Allow CORS (for future frontend use or testing)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.get("/", response_class=HTMLResponse)
async def upload_form():
    return """
    <html>
        <head><title>Upload CSV File</title></head>
        <body>
            <h2>Upload a CSV file for analysis</h2>
            <form action="/api/" enctype="multipart/form-data" method="post">
                <input name="file" type="file" accept=".csv">
                <input type="submit" value="Analyze">
            </form>
        </body>
    </html>
    """

@app.post("/api/")
async def analyze_csv(file: UploadFile = File(...)):
    if not file.filename.endswith(".csv"):
        return JSONResponse(status_code=400, content={"error": "Please upload a CSV file."})

    content = await file.read()
    df = pd.read_csv(io.BytesIO(content))

    summary = {
        "filename": file.filename,
        "rows": df.shape[0],
        "columns": df.shape[1],
        "column_names": list(df.columns),
        "missing_values": df.isnull().sum().to_dict(),
        "numeric_summary": df.describe().to_dict()
    }

    return summary